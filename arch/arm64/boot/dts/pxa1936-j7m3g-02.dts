/*
 *	Copyright (C) 2015 Samsung Electronics Co, Ltd.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License version 2 as
 *	publishhed by the Free Software Foundation.
 */

/dts-v1/;
#include "pxa1936.dtsi"
#include "pxa1936-pinfunc.h"
#include <dt-bindings/mmc/pxa_sdhci.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/video/gen-panel.h>
#include <dt-bindings/pxa1936_memory_reserve_sizes.h>
#include "sec-machtypes.h"

/ {
	model = "Marvell PXA1936 SEC J7M3G Rev0.2 Board";
	compatible = "marvell,pxa1936";
	pxa,rev-id = <MACH_TYPE_J7M3G 2>;

	aliases {
		i2c4 = &muic_physical;
		i2c5 = &sensori2c;
		i2c6 = &mfd_lm3632;
	};

	memory {
		reg = <0x00000000 0x10000000>;
	};

	reserved_memory {
		cp {
			compatible = "marvell,cp-heap";
			cp-base = <PXA1936_CP_BASE>;
			cp-size = <PXA1936_CP_RESERVE_SIZE>;
			status = "okay";
		};

		sec_log {
			compatible = "marvell,seclog-heap";
			seclog-base = <PXA1936_SECLOG_BASE>;
			seclog-size = <PXA1936_SECLOG_RESERVE_SIZE>;
			seclastklog-base = <PXA1936_SECLASTK_LOG_BASE>;
			seclastklog-size = <PXA1936_SECLASTK_LOG_RESERVE_SIZE>;
			status = "okay";
		};

		gpu {
			compatible = "marvell,gpu-heap";
			gpu-base = <PXA1936_GC_BASE>;
			gpu-size = <PXA1936_GC_RESERVE_SIZE>;
			status = "okay";
		};

		cm3_sbuf {
			compatible = "marvell,cm3sbuf-heap";
			cm3sbuf-base = <PXA1936_CM3_SHARED_BUF_BASE>;
			cm3sbuf-size = <PXA1936_CM3_SHARED_BUF_SIZE>;
			status = "okay";
		};

		fb_mem {
			compatible = "marvell,fb-heap";
			fb-mem = <PXA1936_FB_BASE>;
			xres = <720>;
			yres = <1280>;
			bpp = <4>; /* bits per pixel = 32, so bytes per pixel = 32/8 = 4 */
			status = "okay";
		};

		cma {
			compatible = "linux,cma-heap";
			cma-size = <PXA1936_CMA_RESERVE_SIZE>;
			status = "okay";
		};
	};

	soc {
		devfreq-ddr {
			status = "okay";
		};

		pd_display: pd_display@0xd4282800 {
			compatible = "marvell,power-domain-display-pxa1u88";
			reg = <0xd4282800 0x1000>;
			clocks = <&soc_clocks PXA1936_CLK_DISP_HCLK>,
				<&soc_clocks PXA1936_CLK_DSI_ESC>;
			clock-names = "LCDCIHCLK", "esc_clk";
		};

		smmu {	/* iommu in vpu */
			clocks = <&soc_clocks PXA1936_CLK_VPU>,
				<&soc_clocks PXA1936_CLK_VPUBUS>;
			clock-names = "VPUCLK", "VPUACLK";
			marvell,power-domain = <&pd_vpu>;
			status = "okay";
		};

		axi@d4200000 {	/* AXI */
			usbphy: usbphy@d4207000 {
				status = "okay";
			};

			udc: udc@d4208100 {
				status = "okay";
			};

			ehci: ehci@d4208100 {
				status = "okay";
			};

			otg: otg@d4208100 {
				status = "okay";
			};

			pd_gc: pd_gc@d4282800 {
				compatible = "marvell,power-domain-common-gc";
				reg = <0xd4282800 0x1000>;
				clocks = <&soc_clocks PXA1936_CLK_GC3D>;
				lpm-qos = <PM_QOS_CPUIDLE_BLOCK_DDR>;
			};

			pd_gc2d: pd_gc2d@d4282800 {
				compatible = "marvell,power-domain-common-gc2d";
				reg = <0xd4282800 0x1000>;
				clocks = <&soc_clocks PXA1936_CLK_GC2D>;
				lpm-qos = <PM_QOS_CPUIDLE_BLOCK_DDR>;
			};

			gpu: gpu@C0400000 {
				marvell,power-domain = <&pd_gc>;
				marvell,gpu-mem-base = <0x09000000>;
				marvell,gpu-mem-size = <0x1000000>;
				clocks = <&soc_clocks PXA1936_CLK_GC3D>,
					<&soc_clocks PXA1936_CLK_GCSH>,
					<&soc_clocks PXA1936_CLK_GCBUS>;
				clock-names = "GC3DFCLK", "GCSHCLK", "GC3DACLK";
				status = "okay";
			};

			gpu2d: gpu2d@d420c000 {
				marvell,power-domain = <&pd_gc2d>;
				clocks = <&soc_clocks PXA1936_CLK_GC2D>,
					<&soc_clocks PXA1936_CLK_GCBUS>;
				clock-names = "GC2DFCLK", "GC2DACLK";
				status = "okay";
			};

			pd_vpu: pd_vpu@d4282800 {
				compatible = "marvell,power-domain-common-vpu";
				reg = <0xd4282800 0x1000>;
				clocks = <&soc_clocks PXA1936_CLK_VPU>;
				lpm-qos = <PM_QOS_CPUIDLE_BLOCK_DDR>;
			};

			pd_smmu: pd_smmu@c0010000 {
				compatible = "marvell,power-domain-smmu-pxa1u88";
				reg = <0xc0010000 0x10000>;
				marvell,power-domain-parent = <&pd_vpu>;
				clocks = <&soc_clocks PXA1936_CLK_VPU>,
					<&soc_clocks PXA1936_CLK_VPUBUS>;
				clock-names = "VPUCLK", "VPUACLK";
			};

			coda7542: coda7542@d420d000 {
				marvell,sram-internal = <1>;
				marvell,nv21_support = <1>;
				marvell,power-domain = <&pd_smmu>;
				clocks = <&soc_clocks PXA1936_CLK_VPU>,
					<&soc_clocks PXA1936_CLK_VPUBUS>;
				clock-names = "VPUCLK", "VPUACLK";
				status = "okay";
			};

			devfreq-vpu {
				marvell,power-domain = <&pd_vpu>;
				status = "okay";
			};

			dsi: dsi@d420b800 {
				marvell,phy-name = "mmp_dsi1";
				marvell,plat-path-name = "mmp_pnpath";
				marvell,dsi-lanes = <4>;
				marvell,burst-mode = <2>;
				marvell,hbp-en;
				dsi_avdd-supply = <&buck3>;
				status = "okay";
			};

			asram: asram@d12a0000 {
				status = "okay";
			};

			adma0: adma@d128d800 {
				status = "okay";
			};

			adma1: adma@d128d900 {
				status = "okay";
			};

			ccic1: ccic@d420a000 {
				pinctrl-names = "default","sccb";
				pinctrl-0 = <&front_torch_pmx_func &ccic1_pmx_func1>;
				pinctrl-1 = <&ccic1_pmx_func2>;
				interrupts = <0 42 0x4>;
				status = "okay";
			};

			ccic2: ccic@d420a800 {
				pinctrl-names = "default","sccb";
				pinctrl-0 = <&ccic2_pmx_func1>;
				pinctrl-1 = <&ccic2_pmx_func2>;
				/*ccic2 use ccic1 I2C pin on pxa1936dkb */
				sync_ccic1_pin;
				interrupts = <0 77 0x4>;
				status = "okay";
			};

			sc2mmu1: sc2mmu@d420F000 {
				interrupts = <0 15 0x4>;
				status = "okay";
			};

			b52isp: b52isp@0xC0200000 {
				interrupts = <0 11 0x4>;
				status = "okay";
			};

			vdma: vdma@d4209000 {
				marvell,vdma-num = <2>;
				marvell,vdma-axi = <0>;
				status = "okay";
				vdma1 {
					marvell,vdma-id = <0>;
					marvell,sram-size = <30720>;
					marvell,is_vid = <0>;
				};
				vdma2 {
					marvell,vdma-id = <2>;
					marvell,sram-size = <30720>;
					marvell,is_vid = <1>;
				};
			};

			disp: disp@d420b000 {
				marvell,disp-name = "disp_name";
				marvell,path-num = <1>;
				marvell,power-domain = <&pd_display>;
				clocks = <&soc_clocks PXA1936_CLK_DISP_HCLK>,
					<&soc_clocks PXA1936_CLK_PLL4VCO>,
					/* parent1-clk-tbl clk */
					<&soc_clocks PXA1936_CLK_DISP1>,
					<&soc_clocks PXA1936_CLK_DISP4>,
					/* parent2-clk-tbl clk */
					<&soc_clocks PXA1936_CLK_PLL1_624>,
					<&soc_clocks PXA1936_CLK_PLL1_832>,
					<&soc_clocks PXA1936_CLK_PLL1_499_EN>,
					<&soc_clocks PXA1936_CLK_PLL1_499>,
					<&soc_clocks PXA1936_CLK_PLL4>,
					<&soc_clocks PXA1936_CLK_PLL4VCODIV3>;
				clock-names = "LCDCIHCLK", "pll4_vco",
					/* parent1-clk-tbl clk */
					"disp1_clk", "dsipll_clk",
					/* parent2-clk-tbl clk */
					"pll1_624", "pll1_832", "pll1_499_en", "pll1_499", "pll4", "pll4_div3";
				status = "okay";
				path1 {
					marvell,path-name = "mmp_pnpath";
					marvell,overlay-num = <2>;
					marvell,overlay-table =<0>,<1>;
					marvell,output-type = <1>;
					marvell,path-config = <0x10>;
					marvell,link-config = <0x1>;
					disp_apmu {
						plat = <4>;
						apmu-reg = <0xd428284c>;
						clksrc-bit = <9>;
						parent1-clk-tbl = "disp1_clk", "dsipll_clk";
						parent2-clk-tbl = "pll1_624", "pll1_832", "pll1_499_en", "pll4", "pll4_div3";
					};
				};
			};

			fb0: fbbase {
				marvell,fb-name = "mmp-fb";
				marvell,path-name = "mmp_pnpath";
				marvell,overlay-id = <1>;
				marvell,default-pixfmt = <0x108>;
				marvell,buffer-num = <3>;
				marvell,fb-mem = <PXA1936_FB_BASE>;
				status = "okay";
			};

			fb1: fboverlay {
				marvell,fb-name = "mmp-fb-overlay";
				marvell,path-name = "mmp_pnpath";
				marvell,overlay-id = <0>;
				status = "okay";
			};

			/* SD card */
			sdh0: sdh@d4280000 {
				  vqmmc-supply	  = <&ldo10>;
				  vmmc-supply	  = <&ldo14>;
			};

			/* eMMC */
			sdh2: sdh@d4281000 {
				pinctrl-names = "default", "fast";
				pinctrl-0 = <&sdh2_pmx_func1 &sdh2_pmx_func2 &sdh2_pmx_func3>;
				pinctrl-1 = <&sdh2_pmx_func1_fast &sdh2_pmx_func2_fast &sdh2_pmx_func3_fast>;
				bus-width = <8>;
				non-removable;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-quirks = <(SDHCI_QUIRK_BROKEN_CARD_DETECTION)>;
				marvell,sdh-quirks2 = <(
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						/* SDHCI_QUIRK2_BROKEN_HS200 | */
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-host-caps = <(MMC_CAP_1_8V_DDR)>;
				marvell,sdh-host-caps2 = <(
						MMC_CAP2_DISABLE_BLK_ASYNC |
						MMC_CAP2_CACHE_CTRL
						)>;
				marvell,sdh-flags = <(
						PXA_FLAG_NEW_RX_CFG_REG |
						PXA_FLAG_SD_8_BIT_CAPABLE_SLOT |
						PXA_FLAG_ENABLE_CLOCK_GATING |
						PXA_FLAG_TX_SEL_BUS_CLK
						)>;
				/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_52M 0 0 0 0 0>,
						<PXA_MMC_TIMING_MMC_HS PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_MMC_HS200 PXA_SDH_DTR_156M PXA_SDH_DTR_156M 0 0 3 0 0>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_104M 0 0 0 0 0>;
				marvell,sdh-tuning-win-limit = <100>;
				marvell,sdh-dvfs-levels = <1 7>; /* tuning from dvfs level 1 to 7 */
				marvell,sdh-tuning-mode = <PXA_SDH_TUNING_DVFS>;
				status = "okay";
			};

			/* SD card */
			sdh0: sdh@d4280000 {
				pinctrl-names = "default", "fast";
				pinctrl-0 = <&sdh0_pmx_func1 &sdh0_pmx_func2 &sdh0_pmx_func3>;
				pinctrl-1 = <&sdh0_pmx_func1 &sdh0_pmx_func2_fast &sdh0_pmx_func3_fast>;
				cd-gpios = <&gpio 92 0>;
				cd-inverted;
				bus-width = <4>;
				wp-inverted;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-host-caps-disable = <(MMC_CAP_UHS_SDR104)>;
				marvell,sdh-quirks = <(
						SDHCI_QUIRK_INVERTED_WRITE_PROTECT |
						SDHCI_QUIRK_BROKEN_CARD_DETECTION
						)>;

				/* as HW design, only SD Card's host has AIB_MMC register */
				marvell,sdh-quirks2 = <(
						SDHCI_QUIRK2_SET_AIB_MMC |
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-flags = <(
						PXA_FLAG_NEW_RX_CFG_REG |
						PXA_FLAG_TX_SEL_BUS_CLK |
						PXA_FLAG_ENABLE_CLOCK_GATING
						)>;
				/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_52M 0 0 0 0 0>,
						<PXA_MMC_TIMING_SD_HS PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_SDR104 PXA_SDH_DTR_208M PXA_SDH_DTR_208M 0 0 3 0 0>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_104M 0 0 0 0 0>;
				marvell,sdh-tuning-win-limit = <120>;
				marvell,sdh-dvfs-levels = <1 7>; /* tuning from dvfs level 1 to 7 */
				marvell,sdh-tuning-mode = <PXA_SDH_TUNING_DVFS>;
				status = "okay";
			};

			/* SDIO */
			sdh1: sdh@d4280800 {
				pinctrl-names = "default", "fast", "sleep";
				pinctrl-0 = <&sdh1_pmx_func1 &sdh1_pmx_func2 &sdh1_pmx_func3 &sdh1_pmx_func4>;
				pinctrl-1 = <&sdh1_pmx_func1_fast &sdh1_pmx_func2_fast &sdh1_pmx_func3 &sdh1_pmx_func4>;
				pinctrl-2 = <&sdh1_pmx_edge_wakeup>;
				bus-width = <4>;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-host-caps-disable = <(MMC_CAP_UHS_SDR104 | MMC_CAP_UHS_SDR50)>;
				marvell,sdh-quirks = <(SDHCI_QUIRK_BROKEN_CARD_DETECTION)>;
				marvell,sdh-quirks2 = <(SDHCI_QUIRK2_HOLDSUSPEND_AFTER_REQUEST |
						SDHCI_QUIRK2_FAKE_SDIO_IRQ_IN_UHS |
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-pm-caps = <(MMC_PM_KEEP_POWER)>;
				marvell,sdh-host-caps2 = <(MMC_CAP2_NO_VOLTAGE_SWITCH)>;
				marvell,sdh-flags = <(
						PXA_FLAG_NEW_RX_CFG_REG |
						PXA_FLAG_WAKEUP_HOST |
						PXA_FLAG_TX_SEL_BUS_CLK |
						PXA_FLAG_EN_PM_RUNTIME |
						PXA_FLAG_DISABLE_PROBE_CDSCAN
						)>;
				/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_52M 0 0 0 0 0>,
						<PXA_MMC_TIMING_SD_HS PXA_SDH_DTR_45M PXA_SDH_DTR_89M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_SDR50 PXA_SDH_DTR_104M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_SDR104 PXA_SDH_DTR_208M PXA_SDH_DTR_208M 0 0 3 0 0>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_89M 0 0 0 0 0>;
				marvell,sdh-tuning-win-limit = <120>;
				marvell,sdh-dvfs-levels = <1 7>; /* tuning from dvfs level 1 to 7 */
				marvell,sdh-tuning-mode = <PXA_SDH_TUNING_DVFS>;
				status = "okay";
			};
		};

		apb@d4000000 {
			pdma0: pdma@d4000000 {
				status = "okay";
			};

			timer0: timer@d4014000 {
				status = "disabled";
			};

			timer1: timer@d4016000 {
				status = "disabled";
			};

			timer2: timer@d401f000 {
				status = "okay";
			};

			edgewakeup: edgewakeup@d4019800 {
				status = "okay";
			};

			uart0: uart@d4017000 {
				pinctrl-names = "default", "sleep";
				pinctrl-0 = <&uart0_pmx_func1 &uart0_pmx_func2>;
				pinctrl-1 = <&uart0_pmx_func1_sleep &uart0_pmx_func2>;
				edge-wakeup-gpio = <47>; /* GPIO47: UART rx pin */
			};

			thermal: thermal@d4013300 {
				status = "okay";
			};

			pmx: pinmux@d401e000 {
				status = "okay";
				/* pin base, nr pins & gpio function */
				pinctrl-single,gpio-range = <
					/*
					 * GPIO number is hardcoded for range at here.
					 * In gpio chip, GPIO number is not hardcoded for range.
					 * Since one gpio pin may be routed to multiple pins,
					 * define these gpio range in pxa910-dkb.dts not pxa910.dtsi.
					 */
					&range 55 55 0	/* GPIO0 ~ GPIO54 */
					&range 110 32 0 /* GPIO67 ~ GPIO98 */
					&range 52 1 0	/* GPIO124 */
				>;

				pinctrl-names = "default";
				pinctrl-0 = <&mfp_pins_group_1 &mfp_pins_group_2>;

				/* GPIO Setting : IN/PU/H */
				mfp_pins_group_1: mfp_pins_group_1 {
					pinctrl-single,pins = <
						ND_IO15 AF0
						MMC1_DAT4 AF0
						MMC1_DAT5 AF0
						MMC1_DAT6 AF0
						MMC1_DAT7 AF0
						MMC1_WP AF1
						MMC1_CD AF1 /* Above pins not used by sdh1, configured as GPIO */
						GPIO124 AF0
						SLAVE_RESET_OUT AF0
						GPIO19 AF0			/* No.62 */
						GPIO31 AF0			/* No.74 */
						GPIO43 AF0
						GPIO44 AF0
						GPIO45 AF0
						GPIO46 AF0
						GPIO49 AF0
						GPIO50 AF0
						GPIO13 AF0
						GPIO14 AF0
						GPIO20 AF0
						GPIO68 AF0
						GPIO78 AF0
						GPIO9 AF0
						GPIO8 AF0
						GPIO86 AF0
						GPIO89 AF0
						GPIO92 AF0
					>;
					PULL_UP;LPM_FLOAT;
				};

				/* GPIO Setting : IN/NP */
				mfp_pins_group_2: mfp_pins_group_2 {
					  pinctrl-single,pins = <
						GPIO33 AF0                      /*+No.76 */
						GPIO34 AF0
						GPIO35 AF0
						GPIO36 AF0                      /*-No.79 */
					>;
					DS_MEDIUM;PULL_FLOAT;EDGE_NONE;LPM_FLOAT;
				};

				uart0_pmx_func1: uart0_pmx_func1 {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					MFP_DEFAULT;
				};

				uart0_pmx_func2: uart0_pmx_func2 {
					pinctrl-single,pins = <
						GPIO48 AF6
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				uart0_pmx_func1_sleep: uart0_pmx_func1_sleep {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};
				pmic1_pins: pinmux_88pm830_pins {
					pinctrl-single,pins = <
						GPIO4	AF0
						GPIO19	AF0
						GPIO98 AF0
					>;
					MFP_DEFAULT;
				};

				pmic1_pins_sleep: pinmux_88pm830_pins_sleep {
					pinctrl-single,pins = <
						GPIO4 AF0
					>;
					DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				/* MFP_DEFAULT */
				sdh0_pmx_func1: sdh0_pmx_func1 {
					pinctrl-single,pins = <
						GPIO92 AF0 /* GPIO92, used for sd card detect */
					>;
					MFP_DEFAULT;
				};

				/* no pull, no LPM */
				sdh0_pmx_func2: sdh0_pmx_func2 {
					pinctrl-single,pins = <
						MMC1_DAT3 AF0
						MMC1_DAT2 AF0
						MMC1_DAT1 AF0
						MMC1_DAT0 AF0
						MMC1_CMD AF0
					>;
					MFP_PULL_UP;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh0_pmx_func3: sdh0_pmx_func3 {
					pinctrl-single,pins = <
						MMC1_CLK AF0
					>;
					MFP_LPM_DRIVE_LOW;
				};

				/* ds fast, no pull, no LPM */
				sdh0_pmx_func2_fast: sdh0_pmx_func2_fast {
					pinctrl-single,pins = <
						MMC1_DAT3 AF0
						MMC1_DAT2 AF0
						MMC1_DAT1 AF0
						MMC1_DAT0 AF0
						MMC1_CMD AF0
					>;
					DS_FAST;PULL_UP;EDGE_NONE;LPM_NONE;
				};

				/* ds fast, LPM_DRIVE_LOW */
				sdh0_pmx_func3_fast: sdh0_pmx_func3_fast {
					pinctrl-single,pins = <
						MMC1_CLK AF0
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh1_pmx_func1_fast: sdh1_pmx_func1_fast {
						pinctrl-single,pins = <
							GPIO37 AF1
							GPIO38 AF1
							GPIO39 AF1
							GPIO40 AF1
							GPIO41 AF1
						>;
						DS_FAST;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				sdh1_pmx_func2_fast: sdh1_pmx_func2_fast {
						pinctrl-single,pins = <
							GPIO42 AF1
						>;
						DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh1_pmx_func1: sdh1_pmx_func1 {
						pinctrl-single,pins = <
							GPIO37 AF1
							GPIO38 AF1
							GPIO39 AF1
							GPIO40 AF1
							GPIO41 AF1
						>;
						MFP_DEFAULT;
				};

				sdh1_pmx_func2: sdh1_pmx_func2 {
						pinctrl-single,pins = <
							GPIO42 AF1
						>;
						DS_SLOW0;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh1_pmx_func3: sdh1_pmx_func3 {
						pinctrl-single,pins = <
							GPIO97 AF0
							GPIO71 AF0
						>;
						DS_MEDIUM;PULL_FLOAT;EDGE_NONE;LPM_NONE;
				};

				sdh1_pmx_func4: sdh1_pmx_func4 {
						pinctrl-single,pins = <
							GPIO8 AF0
							/* GPIO5 AF0 */
						>;
						DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_NONE;
				};

				sdh1_pmx_edge_wakeup: sdh1_pmx_edge_wakeup {
						pinctrl-single,pins = <
							GPIO39 AF1
						>;
						DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				/* no pull, no LPM */
				sdh2_pmx_func1: sdh2_pmx_func1 {
					pinctrl-single,pins = <
						ND_IO7 AF1
						ND_IO6 AF1
						ND_IO5 AF1
						ND_IO4 AF1
						ND_IO3 AF1
						ND_IO2 AF1
						ND_IO1 AF1
						ND_IO0 AF1
					>;
					MFP_PULL_UP;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh2_pmx_func2: sdh2_pmx_func2 {
					pinctrl-single,pins = <
						SM_SCLK AF1
					>;
					MFP_LPM_DRIVE_LOW;
				};

				sdh2_pmx_func3: sdh2_pmx_func3 {
					pinctrl-single,pins = <
						ND_CLE_SM_OEN AF1
					>;
					MFP_DEFAULT;
				};

				/* ds fast, no pull, no LPM */
				sdh2_pmx_func1_fast: sdh2_pmx_func1_fast {
					pinctrl-single,pins = <
						ND_IO7 AF1
						ND_IO6 AF1
						ND_IO5 AF1
						ND_IO4 AF1
						ND_IO3 AF1
						ND_IO2 AF1
						ND_IO1 AF1
						ND_IO0 AF1
					>;
					DS_FAST;PULL_UP;EDGE_NONE;LPM_NONE;
				};

				/* ds fast, LPM_DRIVE_LOW */
				sdh2_pmx_func2_fast: sdh2_pmx_func2_fast {
					pinctrl-single,pins = <
						SM_SCLK AF1
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh2_pmx_func3_fast: sdh2_pmx_func3_fast {
					pinctrl-single,pins = <
						ND_CLE_SM_OEN AF1
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				sspa0_gpio: sspa0_gpio {
					pinctrl-single,pins = <
						GPIO21 AF0
						GPIO22 AF0
						GPIO23 AF0
						GPIO24 AF0
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_FLOAT;
				};
				sspa0_func: sspa0_func {
					pinctrl-single,pins = <
						GPIO21 AF7
						GPIO22 AF7
						GPIO23 AF7
						GPIO24 AF7
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_NONE;
				};
				sspa1_func: sspa1_func {
					pinctrl-single,pins = <
						GPIO25 AF7
						GPIO26 AF7
						GPIO27 AF7
						GPIO28 AF7
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				twsi0_pmx_func: twsi0_pmx_func {
					/* gpio53/54: AF2 */
					pinctrl-single,pins = <
						GPIO53 AF2
						GPIO54 AF2
					>;
					MFP_LPM_FLOAT;
				};
				twsi0_pmx_gpio: twsi0_pmx_gpio {
					pinctrl-single,pins = <
						GPIO53 AF0
						GPIO54 AF0
					>;
					MFP_LPM_FLOAT;
				};
				twsi1_pmx_func: twsi1_pmx_func {
					/* gpio87/88: AF5 */
					pinctrl-single,pins = <
						GPIO87 AF5
						GPIO88 AF5
					>;
					MFP_LPM_FLOAT;
				};
				twsi1_pmx_gpio: twsi1_pmx_gpio {
					pinctrl-single,pins = <
						GPIO87 AF0
						GPIO88 AF0
					>;
					MFP_LPM_FLOAT;
				};
				twsi3_pmx_func: twsi3_pmx_func {
					/* gpio73/74: AF5 */
					pinctrl-single,pins = <
						GPIO73 AF5
						GPIO74 AF5
					>;
					MFP_LPM_FLOAT;
				};
				twsi3_pmx_gpio: twsi3_pmx_gpio {
					pinctrl-single,pins = <
						GPIO73 AF0
						GPIO74 AF0
					>;
					MFP_LPM_FLOAT;
				};

				gnss_pmx_def: gnss_pmx_def {
					pinctrl-single,pins = <
						GPIO81 AF0
						GPIO82 AF0
						GPIO83 AF0
						GPIO84 AF0
						GPIO85 AF0
					>;
					MFP_LPM_PULL_DW;
				};

				gnss_pmx_power_on: gnss_pmx_power_on {
					pinctrl-single,pins = <
						GPIO81 AF6
						GPIO82 AF6
						GPIO83 AF6
						GPIO84 AF6
						GPIO85 AF6
					>;
					MFP_DEFAULT;
				};

				dvc_pmx_func: dvc_pmx_func {
					pinctrl-single,pins = <
						GPIO93 AF5
						GPIO94 AF5
						GPIO95 AF5
					>;
					MFP_DEFAULT;
				};

				ccic1_pmx_func1: ccic1_pmx_func1 {
					pinctrl-single,pins = <
						GPIO77 AF1
						GPIO67 AF0
						GPIO53 AF0
						GPIO54 AF0
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				front_torch_pmx_func: front_torch_pmx_func {
					pinctrl-single,pins = <
						GPIO0 AF0
					>;
					MFP_PULL_DOWN;
				};

				ccic1_pmx_func2: ccic1_pmx_func2 {
					pinctrl-single,pins = <
						GPIO53 AF7
						GPIO54 AF7
					>;
					MFP_LPM_FLOAT;
				};

				ccic2_pmx_func1: ccic2_pmx_func1 {
					pinctrl-single,pins = <
						GPIO69 AF0
					>;
					MFP_PULL_DOWN;
				};

				ccic2_pmx_func2: ccic2_pmx_func2 {
					pinctrl-single,pins = <
						GPIO69 AF0
					>;
					MFP_PULL_DOWN;
				};

				muic_pmx_i2c: muic_pmx_i2c {
					pinctrl-single,pins = <
						GPIO30 AF0
						GPIO29 AF0
					>;
					MFP_LPM_FLOAT;
				};

				muic_pmx_io: muic_pmx_io {
					pinctrl-single,pins = <
						GPIO4 AF0
						GPIO91 AF0
					>;
					DS_MEDIUM;PULL_FLOAT;EDGE_NONE;LPM_FLOAT;
				};

				muic_pmx_io_sleep: muic_pmx_io_sleep {
					pinctrl-single,pins = <
						GPIO4 AF0
					>;
					DS_MEDIUM;PULL_FLOAT;EDGE_FALL;LPM_FLOAT;
				};

				gpio_keys_pins: pinmux_gpio_keys_pins {
					pinctrl-single,pins = <
						GPIO16 AF0
						GPIO17 AF0
						GPIO18 AF0
					>;
					MFP_PULL_UP;
				};

				gpio_sws_pins: gpio_sws_pins {
					pinctrl-single,pins = <
						GPIO32 AF0
					>;
					MFP_PULL_FLOAT;
				};

				gpio_keys_edge_wakeup: gpio_keys_edge_wakeup {
					pinctrl-single,pins = <
						GPIO18 AF0
					>;
					DS_MEDIUM;PULL_UP;EDGE_BOTH;LPM_NONE;
				};

				gpio_sws_edge_wakeup: gpio_sws_edge_wakeup {
					pinctrl-single,pins = <
						GPIO32 AF0
					>;
					DS_MEDIUM;PULL_FLOAT;EDGE_BOTH;LPM_NONE;
				};

				touch_pins: touch_pins {
					pinctrl-single,pins = <
						GPIO72 AF0
						>;
					MFP_DEFAULT;
				};

				sensor_i2c_pmx: sensor_i2c_pmx {
					pinctrl-single,pins = <
						GPIO3 AF0
						GPIO2 AF0
					>;
					MFP_DEFAULT;
				};

				prox_int_pmx: prox_int_pmx {
					pinctrl-single,pins = <
						GPIO7 AF0
					>;
					MFP_DEFAULT;
				};

				acc_int_pmx: acc_int_pmx {
					pinctrl-single,pins = <
						GPIO11 AF0
					>;
					MFP_DEFAULT;
				};

				nfc_pins: nfc_pins {
					pinctrl-single,pins = <
						GPIO5 AF0
						GPIO12 AF0
					>;
					MFP_PULL_DOWN;
				};

				nfc_en_pin: nfc_en_pin {
					pinctrl-single,pins = <
						GPIO70 AF0
					>;
					MFP_DEFAULT;
				};
				lcd_esd_pmx: lcd_esd_pmx {
					pinctrl-single,pins = <
						GPIO6 AF0
					>;
					MFP_DEFAULT;
				};

				lcd_rst_pmx_idle: lcd_rst_pmx_idle {
					pinctrl-single,pins = <
						GPIO90 AF0
					>;
					MFP_PULL_UP;
				};

				lcd_rst_pmx_sleep: lcd_rst_pmx_sleep {
					pinctrl-single,pins = <
						GPIO90 AF0
					>;
					DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_DRIVE_LOW;
				};
			};

			coresight: coresight@d4100000 {
				status = "okay";
			};

			twsi0: i2c@d4011000 {
				status = "okay";
			};

			mfpr: mfpr@d401e000 {
				pinctrl-names = "default";
				reg = <0xd401e000 0x31c>;
				status = "okay";
			};

			twsi1: i2c@d4010800 {
				pinctrl-names = "default","gpio";
				pinctrl-0 = <&twsi1_pmx_func>;
				pinctrl-1 = <&twsi1_pmx_gpio>;
				i2c-gpio = <&gpio 87 0 &gpio 88 0>;
				status = "okay";

				touch0: ist30xxc@50 {
					compatible = "imagis,ist30xxc";
					pinctrl-names = "default";
					pinctrl-0 = <&touch_pins>;
					reg = <0x50>;
					avdd-supply = <&ldo6>;
					interrupt-parent = <&gpio>;
					interrupts = <72 IRQF_TRIGGER_FALLING>;
					imagis,max-x = <1152>;
					imagis,max-y = <2047>;
					imagis,max-w = <15>;
					imagis,irq-flag =  <IRQF_ONESHOT>;
					imagis,avdd-volt = <3000000>;
					imagis,chip-id = <0x38C>;
					imagis,max-node = <576>;
					/* IST3026C & IST3032C : 256
					   IST3038C & IST3044C & IST3048C : 576 */
					imagis,chip-code = <3>;
					/* 1 : IST3026C
					   2 : IST3032C
					   3 : IST3038C
					   4 : IST3044C
					   5 : IST3048C */
					imagis,chip-name = "IST3038C";
				};
			};

			twsi2: i2c@d4037000 {
				status = "okay";

				pmic0: 88pm880@30 {
					reg = <0x30>;
					interrupts = <0 4 IRQF_TRIGGER_HIGH>;
					interrupt-parent = <&gic>;

					dvc {
						pinctrl-names = "default";
						pinctrl-0 = <&dvc_pmx_func>;
					};

					battery {
						bat-ntc-support;
						gpadc-det-no = <3>;
						gpadc-temp-no = <1>;

						cc-fixup = <102>;
					};

					/*
					 * TODO: remove later, fake ldo,
					 * to pass compile
					 */
					ldo19: regulator-ldo19 {
					};
				};

				pmic2: 88pm860@38 {
					compatible = "marvell,88pm860";
					reg = <0x38>;
					marvell,pmic-type = <1>;
					/* no codec_int currently, comment out now */
					/*
					interrupt-parent = <&gpio>;
					interrupts = <124 0x1>;
					marvell,88pm805-irq-write-clear;
					*/
					pm860_codec: pm860_codec {
						compatible = "marvell,88pm860-codec";
						#dailink-cells = <1>;
					};
				};
			};

			twsi3: i2c@d4013800 {
				pinctrl-names = "default", "gpio";
				pinctrl-0 = <&twsi3_pmx_func>;
				pinctrl-1 = <&twsi3_pmx_gpio>;
				i2c-gpio = <&gpio 73 0 &gpio 74 0>;
				status = "okay";
				sec-nfc@27 {
					compatible = "sec-nfc";
					pinctrl-names = "default";
					pinctrl-0 = <&nfc_pins &nfc_en_pin>;
					reg = <0x27>;
					interrupt-parent = <&gpio>;
					interrupts = <5 0x1>;
					sec-nfc,irq-gpio = <&gpio 5 0>;
					sec-nfc,ven-gpio = <&gpio 70 0>;
					sec-nfc,firm-gpio = <&gpio 12 0>;
				};
			};

			/* SSPA port 0 */
			sspa0: sspa@d128dc00 {
				pinctrl-names = "default";
				pinctrl-0 = <&sspa0_func>;
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <12288>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <8192>;
				burst_size = <4>;
				#dailink-cells = <1>;
				status = "okay";
			};

			/* SSPA port 1 */
			sspa1: sspa@d128dd00 {
				pinctrl-names = "default";
				pinctrl-0 = <&sspa1_func>;
				playback_period_bytes = <16384>;
				playback_buffer_bytes = <32768>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <8192>;
				burst_size = <4>;
				#dailink-cells = <1>;
				status = "okay";
			};

			map: map@d1200000 {
				marvell,b0_fix;
				marvell,apll = <0>;
				lpm-qos = <PM_QOS_CPUIDLE_BLOCK_UDR>;
				status = "okay";
				sleep_vol = <975000>;
				pmic-name = "88pm880";
				vccmain-supply = <&buck1aslp>;
				mmp_map_codec: mmp_map_codec {
					compatible = "marvell,mmp-map-codec";
					#dailink-cells = <1>;
					sleep_vol = <975000>;
				};
				mmp_map_be: mmp_map_be {
					compatible = "marvell,mmp-map-be";
					#dailink-cells = <1>;
				};
				mmp_map_be_tdm: mmp_map_be_tdm {
					compatible = "marvell,mmp-map-be-tdm";
					#dailink-cells = <1>;
				};
			};

			acipc: acipc@d401d000 {
				status = "okay";
			};

			seh: seh@d4080000 {
				status = "okay";
			};

			cp-load {
				status = "okay";
			};
		};

		sec_debug {
			compatible = "sec,sec_debug";
			status = "okay";
		};
	};

	muic_physical: i2c-gpio@4 {
		compatible = "i2c-gpio";
		gpios = <&gpio 30 0 &gpio 29 0>;
		i2c-gpio,delay-us = <3>;
		i2c-gpio,timeout-ms = <100>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		muic: s2mm001b@25 {
			compatible = "samsung,s2mm001b";
			reg = <0x25>;
			interrupt-parent = <&gpio>;
			interrupts = <4 IRQF_TRIGGER_FALLING>;
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&muic_pmx_io>;
			pinctrl-1 = <&muic_pmx_io_sleep>;
			muic-int = <&gpio 4 GPIO_ACTIVE_LOW>;
			status = "ok";
		};
	};

	muic_logical: extcon-sec {
		compatible = "samsung,extcon-sec";
		status = "ok";
	};

	sensori2c: i2c-gpio@5 {
		compatible = "i2c-gpio";
		gpios = <&gpio 3 0 &gpio 2 0>;       /* SDA & SCL */
		i2c-gpio,delay-us = <3>;
		i2c-gpio,timeout-ms = <100>;

		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&sensor_i2c_pmx>;

		status = "okay";

		cm36672p@60 {
			compatible = "cm36672p";
			reg = <0x60>;
			interrupt-parent = <&gpio>;
			interrupts = <7 IRQF_TRIGGER_FALLING>;
			pinctrl-names = "default";
			pinctrl-0 = <&prox_int_pmx>;
			cm36672p,irq_gpio = <&gpio 7 0x1>;
			cm36672p,vdd-supply = <&ldo16>;
			cm36672p,default_hi_thd = <15>;
			cm36672p,default_low_thd = <10>;
			cm36672p,cancel_hi_thd = <10>;
			cm36672p,cancel_low_thd = <7>;
			cm36672p,default_trim = <0>;
			cm36672p,ps_it = <4>;
			cm36672p,led_current = <5>;
		};

		k2hh@1d {
			compatible = "stm,k2hh";
			pinctrl-names = "default";
			pinctrl-0 = <&acc_int_pmx>;
			reg = <0x1d>;
			interrupt-parent = <&gpio>;
			interrupts = <11 IRQF_TRIGGER_FALLING>;
			stm,irq_gpio = <&gpio 11 0x00>;
			stm,axis_map_x = <1>;
			stm,axis_map_y = <0>;
			stm,axis_map_z = <2>;
			stm,negate_x = <0>;
			stm,negate_y = <1>;
			stm,negate_z = <1>;
			stm,poll_interval = <100>;
			stm,min_interval = <2>;
		};
	};

	mmp_pcm_hostless: mmp_pcm_hostless {
		bus_number = <0>;
		compatible = "marvell,mmp-pcm-hostless";
		#dailink-cells = <1>;
		status = "okay";
	};

	snd_soc_dummy: snd_soc_dummy {
		compatible = "snd-soc-dummy";
		#dailink-cells = <1>;
		status = "okay";
	};

	sound {
		compatible = "marvell,map-card";
		map,dapm-route =
			"ADC input1", "TDM_MIC1_CAP",
			"ADC input2", "TDM_MIC2_CAP",
			"ADC input3", "BT_VC_UL",
			"TDM_OUT1_PLAYBACK", "DAC1 output out1",
			"TDM_OUT2_PLAYBACK", "DAC2 output out2",
			"BT_VC_DL", "i2s3_bt_vc";
		fe_i2s1: fe_i2s1 {
			compatible = "marvell,map-dailink-1";
			dai-name = "MAP I2S1 audio";
			stream-name = "map i2s1";
			marvell,cpu-dai = <&sspa0 0>;
			marvell,codec-dai = <&mmp_map_codec 1>;
		};
		fe_i2s2: fe_i2s2 {
			compatible = "marvell,map-dailink-1";
			dai-name = "MAP I2S4 audio";
			stream-name = "map i2s4";
			marvell,cpu-dai = <&sspa1 1>;
			marvell,codec-dai = <&mmp_map_codec 4>;
		};
		fe_i2s3: fe_i2s3 {
			compatible = "marvell,map-dailink-2";
			dai-name = "MAP I2S2 audio";
			stream-name = "map i2s2";
			marvell,cpu-dai = <&mmp_pcm_hostless 0>;
			marvell,codec-dai = <&mmp_map_codec 2>;
			marvell,dai-no-host-mode;
		};
		fe_i2s4: fe_i2s4 {
			compatible = "marvell,map-dailink-7";
			dai-name = "MAP I2S3 audio";
			stream-name = "map i2s3";
			marvell,cpu-dai = <&mmp_pcm_hostless 1>;
			marvell,codec-dai = <&mmp_map_codec 3>;
			marvell,dai-no-host-mode;
		};
		fe_i2s5: fe_i2s5 {
			compatible = "marvell,map-dailink-2";
			dai-name = "MAP I2S5 audio";
			stream-name = "map i2s5";
			marvell,cpu-dai = <&mmp_pcm_hostless 2>;
			marvell,codec-dai = <&mmp_map_codec 5>;
			marvell,dai-dynamic;
			marvell,dai-no-host-mode;
		};
		be_i2s1: be_i2s1 {
			compatible = "marvell,map-dailink-3";
			dai-name = "MAP AUXI2S audio";
			stream-name = "BT audio";
			marvell,cpu-dai = <&mmp_map_be 1>;
			marvell,codec-dai = <&snd_soc_dummy 0>;
			marvell,codec-name = "snd-soc-dummy";
			marvell,codec-dai-name = "snd-soc-dummy-dai";
			marvell,dai-no-pcm;
			marvell,dai-fixup = <0>;
		};
		be_i2s2: be_i2s2 {
			compatible = "marvell,map-dailink-6";
			dai-name = "MAP TDM hs audio";
			stream-name = "codec hs audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 2>;
			marvell,codec-dai = <&pm860_codec 3>;
			marvell,playback-only;
			marvell,dai-no-pcm;
			marvell,dai-fixup = <1>;
		};
		be_i2s3: be_i2s3 {
			compatible = "marvell,map-dailink-4";
			dai-name = "MAP TDM speaker audio";
			stream-name = "codec speaker audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 1>;
			marvell,codec-dai = <&pm860_codec 4>;
			marvell,playback-only;
			marvell,dai-no-pcm;
			marvell,dai-fixup = <1>;
		};
		be_i2s4: be_i2s4 {
			compatible = "marvell,map-dailink-5";
			dai-name = "MAP TDM mic1 audio";
			stream-name = "codec mic1 audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 3>;
			marvell,codec-dai = <&pm860_codec 1>;
			marvell,capture-only;
			marvell,dai-no-pcm;
		};
		be_i2s5: be_i2s5 {
			compatible = "marvell,map-dailink-5";
			dai-name = "MAP TDM mic2 audio";
			stream-name = "codec mic2 audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 4>;
			marvell,codec-dai = <&pm860_codec 2>;
			marvell,capture-only;
			marvell,dai-no-pcm;
		};
	};

	ion {
		marvell,ion-nr = <2>;
		status = "okay";
		marvell,ion-iommu = <1>;
		marvell,power-domain = <&pd_smmu>;
		heap1 {
			marvell,ion-name = "carveout_heap";
			marvell,ion-type = <2>;
			marvell,ion-id = <2>;
			marvell,ion-base = <0>;
			marvell,ion-size = <0>;
		};
		heap2 {
			marvell,ion-name = "system_heap";
			marvell,ion-type = <0>;
			marvell,ion-id = <0>;
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&gpio_keys_pins &gpio_sws_pins>;
		pinctrl-1 = <&gpio_keys_edge_wakeup &gpio_sws_edge_wakeup>;
		edge-wakeup-gpios = <&gpio 18 GPIO_ACTIVE_HIGH &gpio 32 GPIO_ACTIVE_HIGH>;
		#address-cells = <1>;
		#size-cells = <0>;

		home {
			label = "Home";
			linux,code = <KEY_HOMEPAGE>; /* KEY_HOMEPAGE */
			gpios = <&gpio 18 GPIO_ACTIVE_LOW>;
		};
		volume-up {
			label = "Volume Up";
			linux,code = <KEY_VOLUMEUP>; /* KEY_VOLUMEUP */
			gpios = <&gpio 16 GPIO_ACTIVE_LOW>;
		};
		volume-down {
			label = "Volume Down";
			linux,code = <KEY_VOLUMEDOWN>; /* KEY_VOLUMEDOWN */
			gpios = <&gpio 17 GPIO_ACTIVE_LOW>;
		};
		flipcover {
			label = "Flipcover";
			linux,code = <SW_FLIPCOVER>; /* SW_FLIPCOVER */
			gpios = <&gpio 32 GPIO_ACTIVE_LOW>;
			linux,input-type = <EV_SW>;
			debounce-interval = <20>;
		};
	};

	vibrator {
		compatible = "marvell,pwm-vibrator";
		pwms = <&pwm4 0 1000>;
		min_timeout = <0>;
		duty_cycle = <800>;
		vdd_type = <0>;
		vibrator-supply = <&ldo11>;
	};

	sd8x-rfkill {
		sd-host = <&sdh1>;
		pd-gpio = <&gpio 97 0>;
		wib_3v3-supply = <&buck5>;
		wib_1v8-supply = <&buck2>;
		edge-wakeup-gpio = <&gpio 39 0>;
		status = "okay";
	};

	sd8xxx-wlan {
		drv_mode = <0x5>;
		cfg80211_wext = <0xc>;
		sta_name = "wlan";
		wfd_name = "p2p";
		max_vir_bss = <1>;
		cal_data_cfg = "mrvl/WlanCalData_ext.conf";
		txpwrlimit_cfg = "mrvl/txpwrlimit_cfg.bin";
		reg_alpha2 = "GB";
		p2p_enh = <1>;
	};

	sd8xxx-bt {
		/* init_cfg = "mrvl/bt_init_cfg.conf"; */
        cal_cfg = "mrvl/bt_cal_data.conf";
	};

	mmp_m3_1: apsenhb {
		compatible = "marvell,mmp-m3";
		pmicver = <2>;
		vm3pwr-supply = <&ldo3>;
		antpwr-supply = <&ldo4>;

		/* 975000 for CM3 on, 700000 for CM3 off */
		vccmain = <975000 700000>;
		vccmain-supply = <&buck1a>;

		pinctrl-names = "default", "poweron";
		pinctrl-0 = <&gnss_pmx_def>;
		pinctrl-1 = <&gnss_pmx_power_on>;
		status = "okay";
	};

	tzdd {
		status = "okay";
	};

	dip {
		compatible = "marvell,simple-dip";
		clocks = <&soc_clocks PXA1936_CLK_CLST0>,
				<&soc_clocks PXA1936_CLK_CLST1>,
				<&soc_clocks PXA1936_CLK_DDR>;
		clock-names = "clst0", "clst1", "ddr";
	};

	iml: iml@7ffffe0{
		status = "okay";
	};

	mfd_lm3632: i2c-gpio@6 {
		compatible = "i2c-gpio";
		gpios = <&gpio 80 0 &gpio 79 0>;
		i2c-gpio,delay-us = <10>;
		i2c-gpio,timeout-ms = <100>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
		lm3632@11 {
			compatible = "ti,lm3632";
			reg = <0x11>;
			blic_on-gpio = <&gpio 96 0>;
			bl-current = <18000>;
			lcd_strobe_on-gpio = <&gpio 0 0>;
			switching-freq = <500000>;
			status = "ok";
		};
	};

	backlight: gen-panel-bl {
		compatible = "gen-panel-bl";
		gen-panel-bl-name = "panel";
		gen-panel-bl-brt-range = <
			0	0	/* OFF */
			10	2	/* MIN */
			20	10	/* DIM */
			143	96	/* DEF */
			255	213	/* MAX */
			255	255	/* HBM(OUTDOOR) */
		>;
		gen-panel-bl-hbm-en;
		gen-panel-bl-tune-en;
	};

	panel {
		compatible = "marvell,mmp-dsi-panel";
		pinctrl-names = "default", "enable", "disable";
		pinctrl-0 = <&lcd_esd_pmx &lcd_rst_pmx_idle>;
		pinctrl-1 = <&lcd_rst_pmx_idle>;
		pinctrl-2 = <&lcd_rst_pmx_sleep>;
		marvell,path-name = "mmp_pnpath";
		gen-panel = <&gen_panel>;
		gen-panel-backlight = <&backlight>;
		gen-panel-esd-en;
		gen-panel-esd-gpio = <&gpio 6 1>;
		gen-panel-esd-type = <ESD_FALLING>;
		panel_avdd-supply = <&ldo5>;
		panel_rst-gpio = <&gpio 90 0>;
		panel_enp-gpio = <&gpio 75 0>;
		panel_enn-gpio = <&gpio 76 0>;
		panel-ext-pin {
			/*
			 * Three properties are required
			 * to control pwr pin
			 * @node : panel-ext-pin node
			 * @on : <0> - off / <1> - on
			 * @usec : delay time of usec
			 */
			panel-ext-pin-on = <
				&panel_avdd  1	10000
				&panel_enp   1	2000
				&panel_enn   1	10000
				&panel_rst   1	20000
				&panel_rst   0	20000
				&panel_rst   1	30000
			>;
			panel-ext-pin-off = <
				&panel_rst   0	10000
				&panel_enn   0	2000
				&panel_enp   0	0
				&panel_avdd  0	1000
			>;
			/*
			 * There are properties to define pwr pin
			 * pin-name : pin name
			 * pin-type : <0> - GPIO, <1> - PMIC Regulator
			*/
			panel_rst: panel-ext-pin-0 {
				pin-name = "panel_rst";
				pin-type = <EXT_PIN_GPIO>;
			};
			panel_avdd: panel-ext-pin-1 {
				pin-name = "panel_avdd";
				pin-type = <EXT_PIN_REGULATOR>;
			};
			panel_enp: panel-ext-pin-2 {
				pin-name = "panel_enp";
				pin-type = <EXT_PIN_GPIO>;
			};
			panel_enn: panel-ext-pin-3 {
				pin-name = "panel_enn";
				pin-type = <EXT_PIN_GPIO>;
			};
		};
		gen_panel: gen-panel {};
	};

	mcam0:mcam@0 {
		sc2-i2c-dyn-ctrl;
		pwdn-gpios = <&gpio 68 0>;
		reset-gpios = <&gpio 67 0>;
		/*
		af_2v8-supply = <&ldo10>;
		avdd_2v8-supply = <&ldo11>;
		dovdd_1v8-supply = <&voutsw>;
		dvdd_1v2-supply = <&ldo12>;
		*/
		dphy_val = <0xff1d00 0x00024733 0x04001001>;
		status = "disable";
	};

	mcam1:mcam@1 {
		sc2-i2c-dyn-ctrl;
		pwdn-gpios = <&gpio 70 0>;
		reset-gpios = <&gpio 69 0>;

		af_2v8-supply = <&ldo8>;
		avdd_2v8-supply = <&ldo7>;
		dovdd_1v8-supply = <&buck2>;
		dvdd_1v2-supply = <&ldo17>;

		dphy_val = <0xff1d00 0x00024733 0x04001001>;
		status = "okay";
	};

	soc-camera@0 {
		status = "okay";
	};

	soc-camera@1 {
		status = "okay";
	};

	plat_cam {
		status = "okay";
		frontsensor {
			compatible = "marvell,frontsensor";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			S5K5E3F: sensor@1 {
				compatible = "samsung,s5k5e3";
				status = "okay";
				reg = <0x10>;
				clocks = <&soc_clocks PXA1936_CLK_SC2_MCLK>;
				clock-names = "SC2MCLK";
				sc2-i2c-dyn-ctrl;
				adapter = <0x1>;
				sensor-pos = <1>;
				mclk = <26000000>;
				dphy3 = <0x5100>;
				dphy5 = <0xff>;
				dphy6 = <0x1001>;
				avdd_2v8-supply = <&ldo7>;
				dovdd_1v8-supply = <&ldo4>;
				dvdd_1v2-supply = <&ldo17>;
				reset-gpios = <&gpio 69 1>;
			};
		};
		backsensor {
			compatible = "marvell,backsensor";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			S5K3L2: sensor@0 {
				compatible = "samsung,s5k3l2";
				status = "okay";
				reg = <0x2d>;
				clocks = <&soc_clocks PXA1936_CLK_SC2_MCLK>;
				clock-names = "SC2MCLK";
				sc2-i2c-dyn-ctrl;
				adapter = <0x1>;
				sensor-pos = <1>;
				mclk = <26000000>;
				dphy3 = <0xff4115>;
				dphy5 = <0x247ff>;
				dphy6 = <0x4001001>;
				af_2v8-supply = <&ldo8>;
				avdd_2v8-supply = <&ldo7>;
				dovdd_1v8-supply = <&ldo4>;
				dvdd_1v2-supply = <&ldo17>;
				reset-gpios = <&gpio 67 1>;
			};
		};
	};

	b52isp_sc2_csi0 {
			status = "okay";
	};
	b52isp_sc2_csi1 {
			csi_mux_repacked;
			status = "okay";
	};
	b52isp_sc2_dma0 {
			status = "okay";
	};
	b52isp_sc2_dma1 {
			status = "okay";
	};

	sec-thermistor {
		compatible = "samsung,sec-thermistor";
		status = "okay";
		adc-channel = <1>;
		adc_array = <180 186 192 198 204 210 216 222 228 234 240 250 265 280 295 310 340 370 400 430				/*  90 ~  71 */
				460 498 516 534 552 570 588 606 624 643 663 684 706 729 753 778 803 830 857 886				/*  70 ~  51 */
				915 946 978 1011 1046 1082 1119 1158 1198 1240 1283 1329 1376 1424 1475 1528 1584 1641 1701 1764	/*  50 ~  31 */
				1829 1897 1968 2042 2119 2200 2284 2372 2463 2558 2658 2762 2871 2985 3104 3228 3359 3495 3637 3787	/*  30 ~  11 */
				3944 4107 4279 4459 4647 4845 5052 5269 5497 5737 5988 6253 6532 6824 7132 7456 7797 8156 8534 8932	/*  10 ~ -9 */
				9351 9791 10255 10744 11259 11803 12371 12975 13612 14298 15012>;					/* -10 ~ -20 */

		temp_array = <900 890 880 870 860 850 840 830 820 810 800 790 780 770 760 750 740 730 720 710
			700 690 680 670 660 650 640 630 620 610 600 590 580 570 560 550 540 530 520 510
			500 490 480 470 460 450 440 430 420 410 400 390 380 370 360 350 340 330 320 310
			300 290 280 270 260 250 240 230 220 210 200 190 180 170 160 150 140 130 120 110
			100 90 80 70 60 50 40 30 20 10 0 (-10) (-20) (-30) (-40) (-50) (-60) (-70) (-80) (-90)
			(-100) (-110) (-120) (-130) (-140) (-150) (-160) (-170) (-180) (-190) (-200)>;

		io-channels = <&gpadc 16>;
		io-channel-names = "gpadc2_res";
		io-channel-ranges;
	};

};

#include "88pm88x.dtsi"
#include "88pm880.dtsi"
#include "88pm88x_fg_data_j7m3g.dtsi"
#include "88pm88x_battery_j7m3g.dtsi"
#include "88pm880_pxa1936_j7m3g.dtsi"
#include "mmp-dsi-panel-r63317-jdi-hd-video.dtsi"
#include "mmp-dsi-panel-s6d7aa0x62-boe-hd-video.dtsi"
